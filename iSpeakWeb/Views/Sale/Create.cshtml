@model iSpeak.Models.SaleInvoicesViewModels

@{
    ViewBag.Root = "Sale Invoice";
    ViewBag.Title = "Create";
}

<div class="content-wrapper">

    <!-- Content area -->
    <div class="content">
        @using (Html.BeginForm("Create", "Sale", FormMethod.Post, new { id = "target" }))
        {
            @Html.AntiForgeryToken()
            <input type="hidden" id="Amount" name="Amount" />
            <input type="hidden" id="Items" name="Items" />
            <!-- Form inputs -->
            <div class="card">
                <div class="card-header header-elements-inline">
                    <h5 class="card-title">@ViewBag.Root</h5>
                    <div class="header-elements">
                        <div class="list-icons">
                            <a class="list-icons-item" data-action="collapse"></a>
                            <a class="list-icons-item" data-action="reload"></a>
                            <a class="list-icons-item" data-action="remove"></a>
                        </div>
                    </div>
                </div>
                <div class="card-body">
                    <ul class="nav nav-tabs nav-tabs-solid bg-teal-400 border-0 nav-justified">
                        <li class="nav-item"><a href="#tab-lesson" class="nav-link active" data-toggle="tab">Lesson</a></li>
                        <li class="nav-item"><a href="#tab-inventory" class="nav-link" data-toggle="tab">Inventory</a></li>
                        <li class="nav-item"><a href="#tab-service" class="nav-link" data-toggle="tab">Service</a></li>
                    </ul>
                    <div class="tab-content">
                        <div class="tab-pane fade show active" id="tab-lesson">
                            <div class="form-group row">
                                @Html.LabelFor(model => model.LessonPackages_Id, htmlAttributes: new { @class = "col-form-label col-lg-2" })
                                <div class="col-lg-6">
                                    @Html.DropDownListFor(model => model.LessonPackages_Id, ViewBag.listLesson as SelectList, "Select Lesson Package", new { @class = "form-control select2" })
                                </div>
                                <div class="col-lg-4">
                                    <label class="error-lesson text-danger" style="display: none"></label>
                                    @Html.ValidationMessageFor(model => model.LessonPackages_Id, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group row">
                                <label class="col-form-label col-lg-2">Travel Cost / Tutor Cost</label>
                                <div class="col-lg-6">
                                    <div class="form-group row">
                                        <div class="col-lg-3">
                                            @Html.Editor("Travel", new { htmlAttributes = new { @class = "form-control", @placeholder = "Travel Cost" } })
                                        </div>
                                        <div class="col-lg-3">
                                            @Html.Editor("Tutor", new { htmlAttributes = new { @class = "form-control", @placeholder = "Tutor Cost" } })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="form-group row">
                                <label class="col-form-label col-lg-2">Notes</label>
                                <div class="col-lg-6">
                                    @Html.Editor("Notes_Lesson", new { htmlAttributes = new { @class = "form-control" } })
                                </div>
                            </div>
                        </div>
                        <div class="tab-pane fade" id="tab-inventory">
                            Inventory content.
                        </div>
                        <div class="tab-pane fade" id="tab-service">
                            Service content.
                        </div>
                    </div>
                    <hr />
                    <div class="form-group row">
                        <label class="col-form-label col-lg-2">Qty / Discount / Voucher</label>
                        <div class="col-lg-6">
                            <div class="form-group row">
                                <div class="col-lg-2">
                                    @Html.Editor("Qty", new { htmlAttributes = new { @class = "form-control", @Value = 1, @placeholder = "Qty" } })
                                </div>
                                <div class="col-lg-2">
                                    @Html.Editor("Disc", new { htmlAttributes = new { @class = "form-control", @placeholder = "Discount" } })
                                </div>
                                <div class="col-lg-6">
                                    @Html.DropDownListFor(model => model.Vouchers_Id, ViewBag.listVoucher as SelectList, "Select Voucher", new { @class = "form-control select2" })
                                </div>
                                <div class="col-lg-2">
                                    <button type="button" class="btn btn-success" id="btnAdd">Add <i class="icon-plus22 ml-2"></i></button>
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-4">
                            @Html.ValidationMessageFor(model => model.Vouchers_Id, "", new { @class = "text-danger" })
                            <label class="error-sale text-danger" style="display: none"></label>
                        </div>
                    </div>
                    <hr />
                    <div class="table-responsive">
                        <table class="table table-xs">
                            <thead>
                                <tr>
                                    <th style="width:3% !important"></th>
                                    <th style="width:25% !important">Description</th>
                                    <th style="width:6% !important">Qty</th>
                                    <th style="width:11% !important">Price</th>
                                    <th style="width:11% !important">Travel</th>
                                    <th style="width:11% !important">Tutor</th>
                                    <th style="width:11% !important">Discount</th>
                                    <th style="width:11% !important">Voucher</th>
                                    <th style="width:11% !important">Subtotal</th>
                                </tr>
                            </thead>
                            <tbody id="data-body">
                            </tbody>
                            <tfoot>
                                <tr>
                                    <th colspan="6" class="text-right">TOTAL</th>
                                    <th class="text-right total-disc">0</th>
                                    <th class="text-right total-voucher">0</th>
                                    <th class="text-right total-inv">0</th>
                                </tr>
                            </tfoot>
                        </table>
                    </div>
                    <hr />
                    <div class="form-group row" style="display: none">
                        @Html.LabelFor(model => model.Branches_Id, htmlAttributes: new { @class = "col-form-label col-lg-2" })
                        <div class="col-lg-6">
                            @Html.DropDownListFor(model => model.Branches_Id, ViewBag.listBranch as SelectList, "Select Branch", new { @class = "form-control select2", @disabled = "disabled" })
                        </div>
                        <div class="col-lg-4">
                            @Html.ValidationMessageFor(model => model.Branches_Id, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group row">
                        @Html.LabelFor(model => model.Customers_Id, htmlAttributes: new { @class = "col-form-label col-lg-2" })
                        <div class="col-lg-6">
                            @Html.DropDownListFor(model => model.Customers_Id, ViewBag.listCustomer as SelectList, "Select Customer", new { @class = "form-control select2" })
                        </div>
                        <div class="col-lg-4">
                            @Html.ValidationMessageFor(model => model.Customers_Id, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group row">
                        <label class="col-form-label col-lg-2">Notes</label>
                        <div class="col-lg-6">
                            @Html.EditorFor(model => model.Notes, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                    </div>
                    <hr />
                    <div>
                        <a href="@Url.Action("Index", "Sale")" class="btn btn-warning">Cancel <i class="icon-cross2 ml-2"></i></a>
                        <button type="submit" class="btn btn-primary">Submit <i class="icon-paperplane ml-2"></i></button>
                    </div>
                </div>
            </div>
			<!-- /form inputs -->
        }
    </div>
    <!-- /content area -->

</div>

<script type="text/javascript">
    var item_no = 100;

    function ItemLesson() {
        if ($('#LessonPackages_Id').val() == '') {
            $('.error-lesson').html('The Lesson Package field is required.').show();
        }
        else {
            $('.error-lesson').html('').hide();
            
            var travel_cost = 0;
            if ($('#Travel').val() != '') {
                travel_cost = parseFloat($('#Travel').val());
            }

            var tutor_cost = 0;
            if ($('#Tutor').val() != '') {
                tutor_cost = parseFloat($('#Tutor').val());
            }

            var discount = 0;
            if ($('#Disc').val() != '') {
                discount = parseFloat($('#Disc').val());
            }

            $.ajax({
                type: "POST",
                url: '@Url.Action("GetItemTotal", "Sale")',
                data: {
                    qty: $('#Qty').val(),
                    lesson_package_id: $('#LessonPackages_Id').val(),
                    travel: travel_cost,
                    disc: discount,
                    voucher_id: $('#Vouchers_Id').val()
                },
                success: function (data) {
                    AddItemLesson(
                        $('#LessonPackages_Id option:selected').text(),
                        $('#Qty').val(),
                        data.price.toLocaleString(),
                        travel_cost.toLocaleString(),
                        tutor_cost.toLocaleString(),
                        discount.toLocaleString(),
                        data.voucher.toLocaleString(),
                        data.subtotal.toLocaleString(),
                        $('#Vouchers_Id').val(),
                        $('#Notes_Lesson').val(),
                        $('#LessonPackages_Id').val(),
                        '',
                        ''
                    );
                }, //end success
                error: function (result) {
                    bootbox.alert("Error " + result);
                } //end error
            }); //end ajax
        }
    }

    function AddItemLesson(desc, qty, price, travel, tutor, disc, voucher, subtotal, voucher_id, note, lesson_id, inventory_id, service_id) {
        item_no += 1;

        var rowItem = '<tr id="item_' + item_no + '">'
            + '<td align="center" style="vertical-align:middle"><a href="#" onclick="RemoveItem(' + item_no + ')" class="text-danger"><i class="icon-cross icon-2x"></i></a></td>'
            + '<td><input type="text" readonly class="form-control input-xs desc" value="' + desc + '" /></td>'
            + '<td><input type="text" readonly class="form-control input-xs qty text-right" value="' + qty + '" /></td>'
            + '<td><input type="text" readonly class="form-control input-xs price text-right" value="' + price + '" /></td>'
            + '<td><input type="text" readonly class="form-control input-xs travel text-right" value="' + travel + '" /></td>'
            + '<td><input type="text" readonly class="form-control input-xs tutor text-right" value="' + tutor + '" /></td>'
            + '<td><input type="text" readonly class="form-control input-xs disc text-right" value="' + disc + '" /></td>'
            + '<td><input type="text" readonly class="form-control input-xs voucher text-right" value="' + voucher + '" /></td>'
            + '<td><input type="text" readonly class="form-control input-xs subtotal text-right" value="' + subtotal + '" /></td>'
            + '<td style="display: none"><input type="text" readonly class="form-control input-xs voucher_id" value="' + voucher_id + '" /></td>'
            + '<td style="display: none"><input type="text" readonly class="form-control input-xs note" value="' + note + '" /></td>'
            + '<td style="display: none"><input type="text" readonly class="form-control input-xs lesson_id" value="' + lesson_id + '" /></td>'
            + '<td style="display: none"><input type="text" readonly class="form-control input-xs inventory_id" value="' + inventory_id + '" /></td>'
            + '<td style="display: none"><input type="text" readonly class="form-control input-xs service_id" value="' + service_id + '" /></td>'
            + '</tr>';
        $('#data-body').append(rowItem);
        math_total_disc();
        math_total_voucher();
        math_total_inv();
    }

    function RemoveItem(no) {
        $('#item_' + no).remove();
        math_total_disc();
        math_total_voucher();
        math_total_inv();
    }

    function math_total_disc() {
        var total = 0;
        $('input.disc').each(function () {
            var result = $(this).val().replace(/,/g, '');
            if (result == '') {
                result = 0;
            }
            total += parseFloat(result);
        });

        $('.total-disc').text(total.toLocaleString());
    }

    function math_total_voucher() {
        var total = 0;
        $('input.voucher').each(function () {
            var result = $(this).val().replace(/,/g, '');
            if (result == '') {
                result = 0;
            }
            total += parseFloat(result);
        });

        $('.total-voucher').text(total.toLocaleString());
    }

    function math_total_inv() {
        var total = 0;
        $('input.subtotal').each(function () {
            var result = $(this).val().replace(/,/g, '');
            if (result == '') {
                result = 0;
            }
            total += parseFloat(result);
        });

        $('.total-inv').text(total.toLocaleString());
    }

    $(document).ready(function () {
        $('.select2').select2();

        @*$('#btnAddLesson').click(function () {
            if ($('#LessonPackages_Id').val() == '') {
                $('.error-lesson').html('The Lesson Package field is required.').show();
            }
            else if ($('#Qty_Lesson').val() == '') {
                $('.error-lesson').html('The Lesson Qty field is required.').show();
            }
            else if ($('#Disc_Lesson').val() == '') {
                $('.error-lesson').html('The Lesson Discount field is required.').show();
            }
            else {
                $('.error-lesson').html('').hide();

                $.ajax({
                    type: "POST",
                    url: '@Url.Action("GetItemTotal", "Sale")',
                    data: {
                        qty: $('#Qty_Lesson').val(),
                        lesson_package_id: $('#LessonPackages_Id').val(),
                        disc: $('#Disc_Lesson').val(),
                        voucher_id: $('#Vouchers_Id').val()
                    },
                    success: function (data) {
                        AddItemLesson(
                            $('#LessonPackages_Id option:selected').text() + ' ' + $('#Notes_Lesson').val(),
                            $('#Qty_Lesson').val(),
                            data.price,
                            0,
                            $('#Disc_Lesson').val(),
                            data.voucher,
                            data.subtotal
                        );
                    }, //end success
                    error: function (result) {
                        bootbox.alert("Error " + result);
                    } //end error
                }); //end ajax
            }
        });*@

        @*@{
            var session_login = Session["Login"] as iSpeak.Models.LoginViewModel;
        }
        $('#Branches_Id').val('@session_login.Branches_Id').trigger('change');*@

        $('#Branches_Id').val($('#Branch').val()).trigger('change');

        $('#btnAdd').click(function () {
            if ($('#Qty').val() == '') {
                $('.error-sale').html('The Qty field is required.').show();
            }
            else if ($('#Qty').val() == '0') {
                $('.error-sale').html('The Qty field is required.').show();
            }
            else {
                $('.error-sale').html('').hide();

                var ref_this = $("div.tab-content div.active");
                if (ref_this[0]['id'] == 'tab-lesson') {
                    ItemLesson();
                }
                else if (ref_this[0]['id'] == 'tab-inventory') {

                }
                else { //tab-service

                }
            }
        });

        var arrItem = [];
        $('#target').submit(function (e) {
            //e.preventDefault();
            var total = 0;
            $('#data-body tr').each(function () {
                var desc = $(this).find('input.desc').val();
                var qty = parseFloat($(this).find('input.qty').val());
                var price = parseFloat($(this).find('input.price').val().replace(/,/g, ''));
                var travel = parseFloat($(this).find('input.travel').val().replace(/,/g, ''));
                var tutor = parseFloat($(this).find('input.tutor').val().replace(/,/g, ''));
                var disc = parseFloat($(this).find('input.disc').val().replace(/,/g, ''));
                var voucher = parseFloat($(this).find('input.voucher').val().replace(/,/g, ''));
                var subtotal = parseFloat($(this).find('input.subtotal').val().replace(/,/g, ''));
                var voucher_id = $(this).find('input.voucher_id').val();
                var note = $(this).find('input.note').val();
                var lesson_id = $(this).find('input.lesson_id').val();
                var inventory_id = $(this).find('input.inventory_id').val();
                var service_id = $(this).find('input.service_id').val();

                total += subtotal;
                var obj = {
                    desc: desc, qty: qty, price: price, travel: travel, tutor: tutor, disc: disc, voucher: voucher, subtotal: subtotal,
                    voucher_id: voucher_id, note: note, lesson_id: lesson_id, inventory_id: inventory_id, service_id: service_id
                };
                arrItem.push(obj);
            });
            $('#Amount').val(total);
            $('#Items').val(JSON.stringify(arrItem));
        });
    })
</script>