@model iSpeak.Models.SaleInvoicesViewModels

@{
    ViewBag.Root = "Sale Invoice";
    ViewBag.Title = "Create";
}

<div class="content-wrapper">

    <!-- Content area -->
    <div class="content">
        @using (Html.BeginForm("Create", "Sale", FormMethod.Post, new { id = "target" }))
        {
            @Html.AntiForgeryToken()
            <input type="hidden" id="Amount" name="Amount" />
            <input type="hidden" id="Items" name="Items" />
            <!-- Form inputs -->
            <div class="card">
                <div class="card-header header-elements-inline">
                    <h5 class="card-title">@ViewBag.Root</h5>
                    <div class="header-elements">
                        <div class="list-icons">
                            <a class="list-icons-item" data-action="collapse"></a>
                            <a class="list-icons-item" data-action="reload"></a>
                            <a class="list-icons-item" data-action="remove"></a>
                        </div>
                    </div>
                </div>
                <div class="card-body">
                    <ul class="nav nav-tabs nav-tabs-solid bg-teal-400 border-0 nav-justified">
                        <li class="nav-item"><a href="#tab-lesson" class="nav-link active" data-toggle="tab">Lesson</a></li>
                        <li class="nav-item"><a href="#tab-inventory" class="nav-link" data-toggle="tab">Inventory</a></li>
                        <li class="nav-item"><a href="#tab-service" class="nav-link" data-toggle="tab">Service</a></li>
                    </ul>
                    <div class="tab-content">
                        <!-- LESSON -->
                        <div class="tab-pane fade show active" id="tab-lesson">
                            <div class="form-group row">
                                @Html.LabelFor(model => model.LessonPackages_Id, htmlAttributes: new { @class = "col-form-label col-lg-2" })
                                <div class="col-lg-6">
                                    @Html.DropDownListFor(model => model.LessonPackages_Id, ViewBag.listLesson as SelectList, "Select Lesson Package", new { @class = "form-control select2" })
                                </div>
                                <div class="col-lg-4">
                                    <label class="error-lesson text-danger" style="display: none"></label>
                                    @Html.ValidationMessageFor(model => model.LessonPackages_Id, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group row">
                                <label class="col-form-label col-lg-2">Session Hours</label>
                                <div class="col-lg-6">
                                    <div class="form-group row">
                                        <div class="col-lg-3">
                                            @Html.Editor("SessionHours", new { htmlAttributes = new { @class = "form-control", @placeholder = "Session Hours" } })
                                        </div>
                                        <div class="col-lg-9">
                                            <label class="error-hours text-danger" style="display: none"></label>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-4" style="display: none">
                                    @Html.Editor("MaxSessionHours", new { htmlAttributes = new { @class = "form-control", @placeholder = "Max. Session Hours" } })
                                </div>
                            </div>
                            <div class="form-group row">
                                <label class="col-form-label col-lg-2">Travel Cost / Tutor Cost</label>
                                <div class="col-lg-6">
                                    <div class="form-group row">
                                        <div class="col-lg-3">
                                            @Html.Editor("Travel", new { htmlAttributes = new { @class = "form-control", @placeholder = "Travel Cost" } })
                                        </div>
                                        <div class="col-lg-3">
                                            @Html.Editor("Tutor", new { htmlAttributes = new { @class = "form-control", @placeholder = "Tutor Cost" } })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="form-group row">
                                <label class="col-form-label col-lg-2">Notes</label>
                                <div class="col-lg-6">
                                    @Html.Editor("Notes_Lesson", new { htmlAttributes = new { @class = "form-control" } })
                                </div>
                            </div>
                        </div>
                        <!-- /LESSON -->
                        <!-- INVENTORY -->
                        <div class="tab-pane fade" id="tab-inventory">
                            <div class="form-group row">
                                @Html.LabelFor(model => model.Products_Id, htmlAttributes: new { @class = "col-form-label col-lg-2" })
                                <div class="col-lg-5">
                                    @Html.DropDownListFor(model => model.Products_Id, ViewBag.listProduct as SelectList, "Select Product", new { @class = "form-control select2" })
                                </div>
                                <div class="col-lg-1 product-available">
                                </div>
                                <div class="col-lg-4">
                                    <label class="error-inventory text-danger" style="display: none"></label>
                                    @Html.ValidationMessageFor(model => model.Products_Id, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group row">
                                <label class="col-form-label col-lg-2">Notes</label>
                                <div class="col-lg-6">
                                    @Html.Editor("Notes_Inventory", new { htmlAttributes = new { @class = "form-control" } })
                                </div>
                            </div>
                        </div>
                        <!-- /INVENTORY -->
                        <!-- SERVICE -->
                        <div class="tab-pane fade" id="tab-service">
                            <div class="form-group row">
                                @Html.LabelFor(model => model.Services_Id, htmlAttributes: new { @class = "col-form-label col-lg-2" })
                                <div class="col-lg-6">
                                    @Html.DropDownListFor(model => model.Services_Id, ViewBag.listService as SelectList, "Select Service", new { @class = "form-control select2" })
                                </div>
                                <div class="col-lg-4">
                                    <label class="error-service text-danger" style="display: none"></label>
                                    @Html.ValidationMessageFor(model => model.Services_Id, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group row">
                                <label class="col-form-label col-lg-2">Notes</label>
                                <div class="col-lg-6">
                                    @Html.Editor("Notes_Service", new { htmlAttributes = new { @class = "form-control" } })
                                </div>
                            </div>
                        </div>
                        <!-- /SERVICE -->
                    </div>
                    <hr />
                    <div class="form-group row">
                        <label class="col-form-label col-lg-2">Qty / Discount / Voucher</label>
                        <div class="col-lg-6">
                            <div class="form-group row">
                                <div class="col-lg-2">
                                    @Html.Editor("Qty", new { htmlAttributes = new { @class = "form-control", @Value = 1, @placeholder = "Qty" } })
                                </div>
                                <div class="col-lg-2">
                                    @Html.Editor("Disc", new { htmlAttributes = new { @class = "form-control", @placeholder = "Discount" } })
                                </div>
                                <div class="col-lg-6">
                                    @*@Html.DropDownListFor(model => model.Vouchers_Id, ViewBag.listVoucher as SelectList, "Select Voucher", new { @class = "form-control select2" })*@
                                    @Html.ListBoxFor(model => model.Vouchers_Id, ViewBag.listVoucher as SelectList, new { @class = "form-control select2", @multiple = "multiple" })
                                </div>
                                <div class="col-lg-2">
                                    <button type="button" class="btn btn-success" id="btnAdd">Add <i class="icon-plus22 ml-2"></i></button>
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-4">
                            @Html.ValidationMessageFor(model => model.Vouchers_Id, "", new { @class = "text-danger" })
                            @Html.ValidationMessage("Items", "", new { @class = "text-danger" })
                            <label class="error-sale text-danger" style="display: none"></label>
                        </div>
                    </div>
                    <hr />
                    <div class="table-responsive">
                        <table class="table table-xs">
                            <thead>
                                <tr>
                                    <th style="width:3% !important"></th>
                                    <th style="width:13% !important">Description</th>
                                    <th style="width:10% !important">Notes</th>
                                    <th style="width:8% !important">Qty</th>
                                    <th style="width:11% !important">Price</th>
                                    <th style="width:11% !important">Travel</th>
                                    <th style="width:11% !important">Tutor</th>
                                    <th style="width:11% !important">Discount</th>
                                    <th style="width:11% !important">Voucher</th>
                                    <th style="width:11% !important">Subtotal</th>
                                </tr>
                            </thead>
                            <tbody id="data-body"></tbody>
                            <tfoot>
                                <tr>
                                    <th colspan="7" class="text-right">TOTAL</th>
                                    <th class="text-right total-disc">0</th>
                                    <th class="text-right total-voucher">0</th>
                                    <th class="text-right total-inv">0</th>
                                </tr>
                            </tfoot>
                        </table>
                    </div>
                    <hr />
                    <div class="form-group row" style="display: none">
                        @Html.LabelFor(model => model.Branches_Id, htmlAttributes: new { @class = "col-form-label col-lg-2" })
                        <div class="col-lg-6">
                            @Html.DropDownListFor(model => model.Branches_Id, ViewBag.listBranch as SelectList, "Select Branch", new { @class = "form-control select2", @disabled = "disabled" })
                        </div>
                        <div class="col-lg-4">
                            @Html.ValidationMessageFor(model => model.Branches_Id, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group row">
                        @Html.LabelFor(model => model.Customers_Id, htmlAttributes: new { @class = "col-form-label col-lg-2" })
                        <div class="col-lg-6">
                            <div class="form-group row">
                                <div class="col-lg-10">
                                    @*@Html.DropDownListFor(model => model.Customers_Id, ViewBag.listCustomer as SelectList, "Select Customer", new { @class = "form-control select2" })*@
                                    <select class="form-control" id="Customers_Id" name="Customers_Id"></select>
                                </div>
                                <div class="col-lg-2">
                                    <button type="button" class="btn btn-success" data-toggle="modal" data-target="#modal_cust">New <i class="icon-plus22 ml-2"></i></button>
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-4">
                            @Html.ValidationMessage("Customers_Id", "", new { @class = "text-danger err_customer" })
                        </div>
                    </div>
                    <div class="form-group row" style="display: none">
                        <label class="col-form-label col-lg-2">Notes</label>
                        <div class="col-lg-6">
                            @Html.EditorFor(model => model.Notes, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                    </div>
                    <hr />
                    <div>
                        <a href="@Url.Action("Index", "Sale")" class="btn btn-warning">Cancel <i class="icon-cross2 ml-2"></i></a>
                        <button type="submit" class="btn btn-primary">Submit <i class="icon-paperplane ml-2"></i></button>
                    </div>
                </div>
            </div>
            <!-- /form inputs -->
        }
        <!-- Add Customer form modal -->
        <div id="modal_cust" class="modal fade" tabindex="-1">
            <div class="modal-dialog modal-lg">
                <div class="modal-content">
                    <div class="modal-header bg-primary">
                        <h6 class="modal-title">Add New Customer</h6>
                        <button type="button" class="close" data-dismiss="modal">&times;</button>
                    </div>

                    <form action="#" class="form-horizontal">
                        <div class="modal-body">
                            <label class="modal-validation text-danger" style="display: none"></label>
                            <div class="form-group row">
                                <div class="col-sm-6">
                                    <div class="row">
                                        <label class="col-form-label col-sm-3 text-right">Role</label>
                                        <div class="col-sm-9">
                                            @Html.ListBox("CustomerRole", new SelectList(ViewBag.listRole, "Value", "Text", ViewBag.RoleValueDefault), new { @class = "form-control select2", @multiple = "multiple" })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-sm-6">
                                    <div class="row">
                                        <label class="col-form-label col-sm-3 text-right">Birthday</label>
                                        <div class="col-sm-9">
                                            <div class="input-group">
                                                <input type="text" class="form-control tanggal mdl-birthday" />
                                                <span class="input-group-append">
                                                    <span class="input-group-text"><i class="icon-calendar"></i></span>
                                                </span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="form-group row">
                                <div class="col-sm-6">
                                    <div class="row">
                                        <label class="col-form-label col-sm-3 text-right">Full Name</label>
                                        <div class="col-sm-3">
                                            <input type="text" class="form-control mdl-firstname" placeholder="First" onkeyup="user_generate()" />
                                        </div>
                                        <div class="col-sm-3">
                                            <input type="text" class="form-control mdl-middlename" placeholder="Middle" />
                                        </div>
                                        <div class="col-sm-3">
                                            <input type="text" class="form-control mdl-lastname" placeholder="Last" onkeyup="user_generate()" />
                                        </div>
                                    </div>
                                </div>
                                <div class="col-sm-6">
                                    <div class="row">
                                        <label class="col-form-label col-sm-3 text-right">Username</label>
                                        <div class="col-sm-9">
                                            <input type="text" class="form-control mdl-username" placeholder="Username" />
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="form-group row">
                                <div class="col-sm-6">
                                    <div class="row">
                                        <label class="col-form-label col-sm-3 text-right">Email</label>
                                        <div class="col-sm-9">
                                            <input type="text" class="form-control mdl-email" />
                                        </div>
                                    </div>
                                </div>
                                <div class="col-sm-6">
                                    <div class="row">
                                        <label class="col-form-label col-sm-3 text-right">Phone Number</label>
                                        <div class="col-sm-9">
                                            <div class="form-group row">
                                                <div class="col-sm-6">
                                                    <input type="text" class="form-control mdl-phone1" placeholder="Phone 1" />
                                                </div>
                                                <div class="col-sm-6">
                                                    <input type="text" class="form-control mdl-phone2" placeholder="Phone 2" />
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="form-group row">
                                <div class="col-sm-6">
                                    <div class="row">
                                        <label class="col-form-label col-sm-3 text-right">Address</label>
                                        <div class="col-sm-9">
                                            <textarea class="form-control mdl-address" rows="3"></textarea>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-sm-6">
                                    <div class="row">
                                        <label class="col-form-label col-sm-3 text-right">Notes</label>
                                        <div class="col-sm-9">
                                            <textarea class="form-control mdl-notes" rows="3"></textarea>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="form-group row">
                                <div class="col-sm-6">
                                    <div class="row">
                                        <label class="col-form-label col-sm-3 text-right">Languages</label>
                                        <div class="col-sm-9">
                                            @Html.ListBox("CustomerInterest", ViewBag.listLanguage as SelectList, new { @class = "form-control select2", @multiple = "multiple" })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-sm-6">
                                    <div class="row">
                                        <label class="col-form-label col-sm-3 text-right">Promotion</label>
                                        <div class="col-sm-9">
                                            @Html.DropDownList("CustomerPromotionEvents_Id", ViewBag.listPromo as SelectList, "Select Promo Event", new { @class = "form-control select2" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="form-group row">
                                <div class="col-sm-6">
                                    <div class="row">
                                        <label class="col-form-label col-sm-3 text-right">Password</label>
                                        <div class="col-sm-9">
                                            <input type="password" class="form-control mdl-password" />
                                        </div>
                                    </div>
                                </div>
                                <div class="col-sm-6">
                                    <div class="row">
                                        <label class="col-form-label col-sm-3 text-right">Confirm Password</label>
                                        <div class="col-sm-9">
                                            <input type="password" class="form-control mdl-confirmpassword" />
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                            <button type="button" class="btn bg-primary mdl-save">Save Customer</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
        <!-- /add Customer form modal -->
    </div>
    <!-- /content area -->

</div>

<script type="text/javascript">
    var item_no = 100;

    function user_generate() {
        var str1 = $('.mdl-firstname').val().substring(0, 3);
        var str2 = $('.mdl-lastname').val().substring(0, 3);
        var dob = new Date($('.mdl-birthday').val());
        $('.mdl-username').val(str1 + str2 + ('0' + dob.getDate()).slice(-2) + ('0' + (dob.getMonth() + 1)).slice(-2));
    }

    function ItemLesson() {
        if ($('#LessonPackages_Id').val() == '') {
            $('.error-lesson').html('The Lesson Package field is required.').show();
        }
        else if ($('#SessionHours').val() == '') {
            $('.error-hours').html('The Session Hours field is required.').show();
        }
        else {
            $('.error-lesson').html('').hide();
            $('.error-hours').html('').hide();
            
            var travel_cost = 0;
            if ($('#Travel').val() != '') {
                travel_cost = parseFloat($('#Travel').val());
            }

            var tutor_cost = 0;
            if ($('#Tutor').val() != '') {
                tutor_cost = parseFloat($('#Tutor').val());
            }

            var discount = 0;
            if ($('#Disc').val() != '') {
                discount = parseFloat($('#Disc').val());
            }

            $.ajax({
                type: "POST",
                url: '@Url.Action("GetLessonTotal", "Sale")',
                data: {
                    qty: $('#Qty').val(),
                    lesson_package_id: $('#LessonPackages_Id').val(),
                    hours: $('#SessionHours').val(),
                    travel: travel_cost,
                    disc: discount,
                    vouchers: $('#Vouchers_Id').val()
                },
                success: function (data) {
                    //console.log(data.voucher_selected);
                    AddItemLesson(
                        data.description,
                        data.qty, //$('#Qty').val(),
                        data.price.toLocaleString(),
                        travel_cost.toLocaleString(),
                        tutor_cost.toLocaleString(),
                        discount.toLocaleString(),
                        data.voucher.toLocaleString(),
                        data.subtotal.toLocaleString(),
                        $('#SessionHours').val(),
                        data.voucher_selected, //$('#Vouchers_Id').val(),
                        $('#Notes_Lesson').val(),
                        $('#LessonPackages_Id').val(),
                        '',
                        ''
                    );

                    $('#LessonPackages_Id').val('').trigger('change');
                    $('#SessionHours').val('');
                    $('#Travel').val('');
                    $('#Tutor').val('');
                    $('#Notes_Lesson').val('');
                }, //end success
                error: function (result) {
                    bootbox.alert("Error " + result);
                } //end error
            }); //end ajax
        }
    }

    function AddItemLesson(desc, qty, price, travel, tutor, disc, voucher, subtotal, hours, voucher_id, note, lesson_id, inventory_id, service_id) {
        item_no += 1;

        var rowItem = '<tr id="item_' + item_no + '">'
            + '<td align="center" style="vertical-align:middle"><a href="#" onclick="RemoveItem(' + item_no + ')" class="text-danger"><i class="icon-cross icon-2x"></i></a></td>'
            + '<td><input type="text" readonly class="form-control input-xs desc" value="' + desc + '" /></td>'
            + '<td><input type="text" readonly class="form-control input-xs note" value="' + note + '" /></td>'
            + '<td><input type="text" readonly class="form-control input-xs qty text-right" value="' + qty + '" /></td>'
            + '<td><input type="text" readonly class="form-control input-xs price text-right" value="' + price + '" /></td>'
            + '<td><input type="text" readonly class="form-control input-xs travel text-right" value="' + travel + '" /></td>'
            + '<td><input type="text" readonly class="form-control input-xs tutor text-right" value="' + tutor + '" /></td>'
            + '<td><input type="text" readonly class="form-control input-xs disc text-right" value="' + disc + '" /></td>'
            + '<td><input type="text" readonly class="form-control input-xs voucher text-right" value="' + voucher + '" /></td>'
            + '<td><input type="text" readonly class="form-control input-xs subtotal text-right" value="' + subtotal + '" /></td>'
            + '<td style="display: none"><input type="text" readonly class="form-control input-xs hours" value="' + hours + '" /></td>'
            + '<td style="display: none"><input type="text" readonly class="form-control input-xs voucher_id" value="' + voucher_id + '" /></td>'
            + '<td style="display: none"><input type="text" readonly class="form-control input-xs lesson_id" value="' + lesson_id + '" /></td>'
            + '<td style="display: none"><input type="text" readonly class="form-control input-xs inventory_id" value="' + inventory_id + '" /></td>'
            + '<td style="display: none"><input type="text" readonly class="form-control input-xs service_id" value="' + service_id + '" /></td>'
            + '</tr>';
        $('#data-body').append(rowItem);
        math_total_disc();
        math_total_voucher();
        math_total_inv();
    }

    function GetProductAvailable(product_id) {
        $.ajax({
            type: "POST",
            url: '@Url.Action("GetProductAvailable", "Products")',
            data: {
                product_id: product_id
            },
            success: function (data) {
                $('.product-available').html(data.badge);
            }, //end success
            error: function (result) {
                bootbox.alert("Error " + result);
            } //end error
        }); //end ajax
    }

    function ItemInventory() {
        if ($('#Products_Id').val() == '') {
            $('.error-inventory').html('The Product field is required.').show();
        }
        else {
            $('.error-inventory').html('').hide();

            var discount = 0;
            if ($('#Disc').val() != '') {
                discount = parseFloat($('#Disc').val());
            }

            $.ajax({
                type: "POST",
                url: '@Url.Action("GetInventoryTotal", "Sale")',
                data: {
                    qty: $('#Qty').val(),
                    product_id: $('#Products_Id').val(),
                    disc: discount,
                    vouchers: $('#Vouchers_Id').val()
                },
                success: function (data) {
                    if (data.error_message != '') {
                        $('.error-inventory').html(data.error_message).show();
                    }
                    else {
                        $('.error-inventory').html('').hide();
                        AddItemLesson(
                            $('#Products_Id option:selected').text(),
                            data.qty, //$('#Qty').val(),
                            data.price.toLocaleString(),
                            0,
                            0,
                            discount.toLocaleString(),
                            data.voucher.toLocaleString(),
                            data.subtotal.toLocaleString(),
                            0,
                            data.voucher_selected, //$('#Vouchers_Id').val(),
                            $('#Notes_Inventory').val(),
                            '',
                            $('#Products_Id').val(),
                            ''
                        );
                    }

                    $('#Products_Id').val('').trigger('change');
                    $('.product-available').html(empty);
                    $('#Notes_Inventory').val('');
                }, //end success
                error: function (result) {
                    bootbox.alert("Error " + result);
                } //end error
            }); //end ajax
        }
    }

    function ItemService() {
        if ($('#Services_Id').val() == '') {
            $('.error-service').html('The Service field is required.').show();
        }
        else {
            $('.error-service').html('').hide();

            var discount = 0;
            if ($('#Disc').val() != '') {
                discount = parseFloat($('#Disc').val());
            }

            $.ajax({
                type: "POST",
                url: '@Url.Action("GetServiceTotal", "Sale")',
                data: {
                    qty: $('#Qty').val(),
                    service_id: $('#Services_Id').val(),
                    disc: discount,
                    vouchers: $('#Vouchers_Id').val()
                },
                success: function (data) {
                    if (data.error_message != '') {
                        $('.error-service').html(data.error_message).show();
                    }
                    else {
                        $('.error-service').html('').hide();
                        AddItemLesson(
                            $('#Services_Id option:selected').text(),
                            data.qty, //$('#Qty').val(),
                            data.price.toLocaleString(),
                            0,
                            0,
                            discount.toLocaleString(),
                            data.voucher.toLocaleString(),
                            data.subtotal.toLocaleString(),
                            0,
                            data.voucher_selected, //$('#Vouchers_Id').val(),
                            $('#Notes_Service').val(),
                            '',
                            '',
                            $('#Services_Id').val()
                        );
                    }

                    $('#Services_Id').val('');
                    $('#Notes_Service').val('');
                }, //end success
                error: function (result) {
                    bootbox.alert("Error " + result);
                } //end error
            }); //end ajax
        }
    }

    function RemoveItem(no) {
        $('#item_' + no).remove();
        math_total_disc();
        math_total_voucher();
        math_total_inv();
    }

    function math_total_disc() {
        var total = 0;
        $('input.disc').each(function () {
            var result = $(this).val().replace(/,/g, '');
            if (result == '') {
                result = 0;
            }
            total += parseFloat(result);
        });

        $('.total-disc').text(total.toLocaleString());
    }

    function math_total_voucher() {
        var total = 0;
        $('input.voucher').each(function () {
            var result = $(this).val().replace(/,/g, '');
            if (result == '') {
                result = 0;
            }
            total += parseFloat(result);
        });

        $('.total-voucher').text(total.toLocaleString());
    }

    function math_total_inv() {
        var total = 0;
        $('input.subtotal').each(function () {
            var result = $(this).val().replace(/,/g, '');
            if (result == '') {
                result = 0;
            }
            total += parseFloat(result);
        });

        $('.total-inv').text(total.toLocaleString());
    }

    $(document).ready(function () {
        $('.select2').select2();
        
        $('#Branches_Id').val($('#Branch').val()).trigger('change');

        $('.tanggal').daterangepicker({
            singleDatePicker: true,
            locale: {
                format: 'YYYY/MM/DD'
            }
        });

        $('.mdl-birthday').data('daterangepicker').setStartDate('@string.Format("{0:yyyy/MM/dd}", ViewBag.DOB)');
        $('.mdl-birthday').data('daterangepicker').setEndDate('@string.Format("{0:yyyy/MM/dd}", ViewBag.DOB)');

        $('#Customers_Id').select2({
            placeholder: 'Select Customer',
            ajax: {
                url: '@Url.Action("GetUser", "User")',
                data: function (params) {
                    var query = {
                        search: params.term,
                        page: params.page || 1,
                        limit: 20,
                        role: 'all'
                    }

                    return query;
                }
            },
            //minimumInputLength: 2
        });

        $('#LessonPackages_Id').change(function () {
            if ($('#LessonPackages_Id').val() != '') {
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("GetSessionHours", "Sale")',
                    data: {
                        package_id: $('#LessonPackages_Id').val()
                    },
                    success: function (data) {
                        $('#SessionHours').val(data.hours);
                        $('#MaxSessionHours').val(data.hours);
                    }, //end success
                    error: function (result) {
                        bootbox.alert("Error " + result);
                    } //end error
                }); //end ajax
            }
        });

        $('.mdl-save').click(function () {
            if ($('#CustomerRole').val() == '') {
                $('.modal-validation').html('The Role field is required.').show();
            }
            else if ($('.mdl-firstname').val() == '') {
                $('.modal-validation').html('The First Name field is required.').show();
            }
            else if ($('.mdl-username').val() == '') {
                $('.modal-validation').html('The Username field is required.').show();
            }
            else if ($('.mdl-password').val() == '') {
                $('.modal-validation').html('The Password field is required.').show();
            }
            else if ($('.mdl-password').val().length < 6) {
                $('.modal-validation').html('The Password must be at least 6 characters long.').show();
            }
            else if ($('.mdl-password').val() != $('.mdl-confirmpassword').val()) {
                $('.modal-validation').html('The password and confirmation password do not match.').show();
            }
            else {
                $('.modal-validation').html('').hide();

                $.ajax({
                    type: "POST",
                    url: '@Url.Action("RegisterAjaxSync", "Account")',
                    data: {
                        branch_id: $('#Branches_Id').val(),
                        roles: $('#CustomerRole').val(),
                        birthday: $('.mdl-birthday').val(),
                        first_name: $('.mdl-firstname').val(),
                        middle_name: $('.mdl-middlename').val(),
                        last_name: $('.mdl-lastname').val(),
                        username: $('.mdl-username').val(),
                        email: $('.mdl-email').val(),
                        phone1: $('.mdl-phone1').val(),
                        phone2: $('.mdl-phone2').val(),
                        address: $('.mdl-address').val(),
                        notes: $('.mdl-notes').val(),
                        password: $('.mdl-password').val(),
                        interest: $('#CustomerInterest').val(),
                        promotion_event: $('#CustomerPromotionEvents_Id').val()
                    },
                    success: function (data) {
                        if (data.status == "200") {
                            $('.modal-validation').html('The Username ' + $('.mdl-username').val() + ' already exist.').show();
                        }
                        else {
                            $('.modal-validation').html('').hide();

                            //refresh DDL Customer
                            $("#Customers_Id").empty();
                            $("#Customers_Id").append("<option value=''>Select Customer</option");

                            $.each(data.ddl, function (index, row) {
                                $("#Customers_Id").append("<option value='" + row.Value + "'>" + row.Text + "</option>")
                            });

                            //close modal
                            $('#modal_cust').modal('toggle');
                        }
                    }, //end success
                    error: function (result) {
                        bootbox.alert("Error " + result);
                    } //end error
                }); //end ajax
            }
        });

        $('#Products_Id').change(function () {
            $('.product-available').empty();
            if ($('#Products_Id').val() != '') {
                GetProductAvailable($('#Products_Id').val());
            }
        });

        $('#btnAdd').click(function () {
            if ($('#Qty').val() == '') {
                $('.error-sale').html('The Qty field is required.').show();
            }
            else if ($('#Qty').val() == '0') {
                $('.error-sale').html('The Qty field is required.').show();
            }
            else {
                $('.error-sale').html('').hide();

                var ref_this = $("div.tab-content div.active");
                if (ref_this[0]['id'] == 'tab-lesson') {
                    var sess_hour = parseFloat($("#SessionHours").val());
                    var max_sess_hour = parseFloat($("#MaxSessionHours").val());
                    if (sess_hour > max_sess_hour) {
                        $('.error-hours').html('Maximum Session Hours is ' + max_sess_hour).show();
                    }
                    else {
                        $('.error-hours').html('').hide();
                        ItemLesson();
                    }
                }
                else if (ref_this[0]['id'] == 'tab-inventory') {
                    ItemInventory();
                }
                else { //tab-service
                    ItemService();
                }

                $('#Qty').val('1');
                $('#Disc').val('');
                $('#Vouchers_Id').val('').trigger('change');
            }
        });

        $('#target').submit(function (e) {
            //e.preventDefault();

            if ($('#Customers_Id').val() == null) {
                $('.err_customer').html('The field Customer is required.').show();
                return false;
            }
            else {

                var arrItem = [];
                var total = 0;
                $('#data-body tr').each(function () {
                    var desc = $(this).find('input.desc').val();
                    var qty = parseFloat($(this).find('input.qty').val());
                    var price = parseFloat($(this).find('input.price').val().replace(/,/g, ''));
                    var travel = parseFloat($(this).find('input.travel').val().replace(/,/g, ''));
                    var tutor = parseFloat($(this).find('input.tutor').val().replace(/,/g, ''));
                    var disc = parseFloat($(this).find('input.disc').val().replace(/,/g, ''));
                    var voucher = parseFloat($(this).find('input.voucher').val().replace(/,/g, ''));
                    var subtotal = parseFloat($(this).find('input.subtotal').val().replace(/,/g, ''));
                    var hours = parseFloat($(this).find('input.hours').val().replace(/,/g, ''));
                    var voucher_id = $(this).find('input.voucher_id').val();
                    var note = $(this).find('input.note').val();
                    var lesson_id = $(this).find('input.lesson_id').val();
                    var inventory_id = $(this).find('input.inventory_id').val();
                    var service_id = $(this).find('input.service_id').val();

                    total += subtotal;
                    var obj = {
                        desc: desc, qty: qty, price: price, travel: travel, tutor: tutor, disc: disc, voucher: voucher, subtotal: subtotal,
                        hours: hours, voucher_id: voucher_id, note: note, lesson_id: lesson_id, inventory_id: inventory_id, service_id: service_id
                    };
                    arrItem.push(obj);
                });
                $('#Amount').val(total);
                $('#Items').val(JSON.stringify(arrItem));

                $('.err_customer').html('').hide();
                return true;

            }

        });
    })
</script>