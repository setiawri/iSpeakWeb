@model IEnumerable<iSpeak.Models.SaleInvoicesIndexModels>

@{
    ViewBag.Root = "Sale Invoices";
    ViewBag.Title = "Index";
}

<div class="content-wrapper">

    <!-- Content area -->
    <div class="content">
        <!-- Form inputs -->
        <div class="card">
            <div class="card-header header-elements-inline">
                <h5 class="card-title">@ViewBag.Root</h5>
                <div class="header-elements">
                    <div class="list-icons">
                        <a class="list-icons-item" data-action="collapse"></a>
                        <a class="list-icons-item" data-action="reload"></a>
                        <a class="list-icons-item" data-action="remove"></a>
                    </div>
                </div>
            </div>
            <div class="card-body">
                <a href="@Url.Action("Create", "Sale")" class="btn btn-sm btn-success mb-1">Create Invoice <i class="icon-plus22 ml-2"></i></a>
                <button type="button" class="btn btn-sm btn-primary mb-1" id="btnCreate">Create Payment<i class="icon-plus22 ml-2"></i></button>
                <div class="form-check mb-1" style="float: right">
                    <label class="form-check-label">
                        <input type="checkbox" id="chkHide" class="check-styled-primary" data-fouc>
                        Show Completed Payment
                    </label>
                </div>

                <div class="table-responsive">
                    <table class="table table-hover datatable">
                        <thead>
                            <tr>
                                <th></th>
                                <th>@Html.DisplayNameFor(model => model.Branches)</th>
                                <th>@Html.DisplayNameFor(model => model.No)</th>
                                <th>@Html.DisplayNameFor(model => model.Timestamp)</th>
                                <th>@Html.DisplayNameFor(model => model.Customer)</th>
                                <th>@Html.DisplayNameFor(model => model.Amount)</th>
                                <th>@Html.DisplayNameFor(model => model.Due)</th>
                                <th>Status</th>
                                <th>Action</th>
                            </tr>
                        </thead>
                        <tbody id="data-body">
                            @foreach (var item in Model)
                            {
                                <tr>
                                    <td>
                                        @if (item.Due > 0)
                                        {
                                            if (item.Cancelled == true)
                                            {
                                                <span class="text-danger"><i class="icon-cancel-square2"></i></span>
                                            }
                                            else
                                            {
                                                <input type="checkbox" id="@item.Id" class="check-styled" />
                                            }
                                        }
                                        else
                                        {
                                            <span class="text-primary"><i class="icon-checkmark"></i></span>
                                        }
                                    </td>
                                    <td>@Html.DisplayFor(modelItem => item.Branches)</td>
                                    <td>@Html.DisplayFor(modelItem => item.No)</td>
                                    <td>@Html.DisplayFor(modelItem => item.Timestamp)</td>
                                    <td>@Html.DisplayFor(modelItem => item.Customer)</td>
                                    <td>@Html.DisplayFor(modelItem => item.Amount)</td>
                                    <td>@Html.DisplayFor(modelItem => item.Due)</td>
                                    <td>
                                        @if (item.Due > 0)
                                        {
                                            if (item.Cancelled == true)
                                            {
                                                <span class="badge badge-dark d-block">Cancelled</span>
                                            }
                                            else
                                            {
                                                <span class="badge badge-warning d-block">Waiting Payment</span>
                                            }
                                        }
                                        else
                                        {
                                            <span class="badge badge-primary d-block">Completed</span>
                                        }
                                    </td>
                                    <td>
                                        @if (item.Amount == item.Due && item.Cancelled == false) //blm ada pembayaran (bisa cancel)
                                        {
                                            <a href="#" onclick="View_Item('@item.Id', '@item.No')">View</a> @:|
                                            <a href="#" onclick="View_Log('@item.Id')">Log</a> @:|
                                            <a href="#" onclick="Cancelled('@item.Id', '@item.No')">Cancel</a>
                                        }
                                        else
                                        {
                                            <a href="#" onclick="View_Item('@item.Id', '@item.No')">View</a> @:|
                                            <a href="#" onclick="View_Log('@item.Id')">Log</a>
                                        }
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
        <!-- /form inputs -->
    </div>
    <!-- /content area -->

</div>

<script type="text/javascript">
    function View_Item(id, no) {
        $.ajax({
            type: "POST",
            url: '@Url.Action("GetItem", "Sale")',
            data: {
                id: id
            },
            success: function (data) {
                var dialog = bootbox.alert({
                    title: 'Invoice No: ' + no,
                    size: 'large',
                    message: data.content,
                    backdrop: true
                });
            }, //end success
            error: function (result) {
                bootbox.alert("Error " + result);
            } //end error
        }); //end ajax
    }

    function View_Log(id) {
        $.ajax({
            type: "POST",
            url: '@Url.Action("GetPayment", "Payments")',
            data: {
                id: id
            },
            success: function (data) {
                var dialog = bootbox.alert({
                    title: 'Payment Log',
                    message: data.content,
                    backdrop: true
                });
            }, //end success
            error: function (result) {
                bootbox.alert("Error " + result);
            } //end error
        }); //end ajax
    }

    function Cancelled(id, no) {
        bootbox.confirm({
            message: "Are you sure want to cancel Sale Invoice No: " + no + " ?",
            buttons: {
                confirm: {
                    label: 'Yes',
                    className: 'btn-success'
                },
                cancel: {
                    label: 'No',
                    className: 'btn-danger'
                }
            },
            callback: function (result) {
                if (result == true) {
                    $.ajax({
                        type: "POST",
                        url: '@Url.Action("Cancelled", "Sale")',
                        data: {
                            id: id
                        },
                        success: function (data) {
                            location.reload();
                        }, //end success
                        error: function (result) {
                            bootbox.alert("Error " + result);
                        } //end error
                    }); //end ajax
                }
            }
        });
    }

    $(document).ready(function () {
        // Setting datatable defaults
        $.extend($.fn.dataTable.defaults, {
            autoWidth: false,
            columnDefs: [
                {
                    orderable: false,
                    width: 50,
                    targets: [0]
                },
                {
                    orderable: false,
                    width: 150,
                    targets: [8]
                }
            ],
            dom: '<"datatable-header"fl><"datatable-scroll"t><"datatable-footer"ip>',
            language: {
                search: '<span>Filter:</span> _INPUT_',
                searchPlaceholder: 'Type to filter...',
                lengthMenu: '<span>Show:</span> _MENU_',
                paginate: { 'first': 'First', 'last': 'Last', 'next': $('html').attr('dir') == 'rtl' ? '&larr;' : '&rarr;', 'previous': $('html').attr('dir') == 'rtl' ? '&rarr;' : '&larr;' }
            }
        });

        $('.datatable').DataTable({
            pagingType: 'full_numbers',
            order: [[3, 'desc'], [2, 'desc']],
            search: {
                search: 'Waiting Payment'
            }
        });

        $('.check-styled').uniform();
        $('.check-styled-primary').uniform({
            wrapperClass: 'border-primary-600 text-primary-800'
        });

        $('#chkHide').click(function () {
            if ($(this).prop('checked') == true) {
                $('input[type=search]').val('Completed').keyup();
            }
            else {
                $('input[type=search]').val('Waiting Payment').keyup();
            }
        });

        $('#btnCreate').click(function () {
            var ids_selected = '';
            $('#data-body tr').find('.check-styled').each(function () {
                if ($(this).prop('checked') == true) {
                    ids_selected = $('input:checkbox.check-styled:checked').map(function () {
                        return this.id;
                    }).get();
                }
            });

            if (ids_selected == '') {
                bootbox.alert("Please select Invoice!");
            }
            else {
                var url = '@Url.Action("Create", "Payments", new { id = "_id" })';
                window.location.href = url.replace('_id', ids_selected);
            }
        });
    });
</script>