@model iSpeak.Models.EmailSenderViewModels

@{
    ViewBag.Root = "Send Emails";
    ViewBag.Title = "Bulk Sender";
}

<div class="content-wrapper">

    <!-- Content area -->
    <div class="content">
        @using (Html.BeginForm("SendEmails", "Reports", FormMethod.Post, new { @enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()
            <!-- Form inputs -->
            <div class="card">
                <div class="card-header header-elements-inline">
                    <h5 class="card-title">@ViewBag.Root</h5>
                    <div class="header-elements">
                        <div class="list-icons">
                            <a class="list-icons-item" data-action="collapse"></a>
                            <a class="list-icons-item" data-action="reload"></a>
                            <a class="list-icons-item" data-action="remove"></a>
                        </div>
                    </div>
                </div>
                <div class="card-body">
                    <fieldset class="mb-3">
                        <legend class="text-uppercase font-size-sm font-weight-bold">@ViewBag.Title</legend>
                        <div class="form-group row">
                            @Html.LabelFor(model => model.InterestLanguage, htmlAttributes: new { @class = "col-form-label col-lg-2" })
                            <div class="col-lg-5">
                                @Html.DropDownListFor(model => model.InterestLanguage, ViewBag.listLanguages as SelectList, "All", new { @class = "form-control select2" })
                            </div>
                            <div class="col-lg-5">
                                @Html.ValidationMessage("None", "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group row">
                            @Html.LabelFor(model => model.From, htmlAttributes: new { @class = "col-form-label col-lg-2" })
                            <div class="col-lg-5">
                                @Html.EditorFor(model => model.From, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                            <div class="col-lg-5">
                                @Html.ValidationMessageFor(model => model.From, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        @*<div class="form-group row">
                            @Html.LabelFor(model => model.To, htmlAttributes: new { @class = "col-form-label col-lg-2" })
                            <div class="col-lg-5">
                                @Html.EditorFor(model => model.To, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                            <div class="col-lg-5">
                                @Html.ValidationMessageFor(model => model.To, "", new { @class = "text-danger" })
                            </div>
                        </div>*@
                        <div class="form-group row">
                            @Html.LabelFor(model => model.Subject, htmlAttributes: new { @class = "col-form-label col-lg-2" })
                            <div class="col-lg-5">
                                @Html.EditorFor(model => model.Subject, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                            <div class="col-lg-5">
                                @Html.ValidationMessageFor(model => model.Subject, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group row">
                            <label class="col-form-label col-lg-2">Image</label>
                            <div class="col-lg-5">
                                <div class="custom-file">
                                    <input class="form-control custom-file-input" type="file" accept=".jpg, .jpeg, .png|image/*" id="file" name="file" />
                                    <label class="custom-file-label">Choose File...</label>
                                </div>
                            </div>
                            <div class="col-lg-5">
                                @Html.ValidationMessage("Image", "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group row">
                            @Html.LabelFor(model => model.Footer, htmlAttributes: new { @class = "col-form-label col-lg-2" })
                            <div class="col-lg-5">
                                @Html.TextAreaFor(model => model.Footer, new { @class = "form-control", @rows = 2 })
                            </div>
                            <div class="col-lg-5">
                                @Html.ValidationMessageFor(model => model.Footer, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group row">
                            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "col-form-label col-lg-2" })
                            <div class="col-lg-5">
                                @Html.PasswordFor(model => model.Password, new { @class = "form-control" })
                            </div>
                            <div class="col-lg-5">
                                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </fieldset>
                    <div>
                        <button type="button" id="btnSend" class="btn btn-danger">Send Email <i class="icon-envelop ml-2"></i></button>
                    </div>
                </div>
            </div>
            <!-- /form inputs -->
        }
    </div>
    <!-- /content area -->

</div>

<script type="text/javascript">
    $(document).ready(function () {
        $('.select2').select2();

        $('.custom-file-input').on('change', function () {
            var fileLabel = $(this).next('.custom-file-label');
            var files = $(this)[0].files;
            if (files.length > 1) {
                fileLabel.html(files.length + ' files selected');
            }
            else if (files.length == 1) {
                fileLabel.html(files[0].name);
            }
        });

        $('#btnSend').click(function () {

        });
    })
</script>