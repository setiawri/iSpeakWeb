@model iSpeak.Models.ExpensesModels

@{
    ViewBag.Root = "Expenses";
    ViewBag.Title = "Create";
}

<div class="content-wrapper">

    <!-- Content area -->
    <div class="content">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            @Html.HiddenFor(model => model.Id)
            @Html.HiddenFor(model => model.Branches_Id)
            <!-- Form inputs -->
            <div class="card">
                <div class="card-header header-elements-inline">
                    <h5 class="card-title">@ViewBag.Root</h5>
                    <div class="header-elements">
                        <div class="list-icons">
                            <a class="list-icons-item" data-action="collapse"></a>
                            <a class="list-icons-item" data-action="reload"></a>
                            <a class="list-icons-item" data-action="remove"></a>
                        </div>
                    </div>
                </div>
                <div class="card-body">
                    <fieldset class="mb-3">
                        <legend class="text-uppercase font-size-sm font-weight-bold">@ViewBag.Title</legend>
                        <div class="form-group row">
                            @Html.LabelFor(model => model.Timestamp, htmlAttributes: new { @class = "col-form-label col-lg-2" })
                            <div class="col-lg-5">
                                <div class="input-group">
                                    @Html.EditorFor(model => model.Timestamp, new { htmlAttributes = new { @class = "form-control tanggal" } })
                                    <span class="input-group-append">
                                        <span class="input-group-text"><i class="icon-calendar"></i></span>
                                    </span>
                                </div>
                            </div>
                            <div class="col-lg-5">
                                @Html.ValidationMessageFor(model => model.Timestamp, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group row">
                            @Html.LabelFor(model => model.ExpenseCategories_Id, htmlAttributes: new { @class = "col-form-label col-lg-2" })
                            <div class="col-lg-5">
                                @Html.DropDownListFor(model => model.ExpenseCategories_Id, ViewBag.listCategory as SelectList, "Select Category", new { @class = "form-control select2" })
                            </div>
                            <div class="col-lg-5">
                                @Html.ValidationMessageFor(model => model.ExpenseCategories_Id, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group row">
                            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "col-form-label col-lg-2" })
                            <div class="col-lg-5">
                                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                            <div class="col-lg-5">
                                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group row">
                            @Html.LabelFor(model => model.Amount, htmlAttributes: new { @class = "col-form-label col-lg-2" })
                            <div class="col-lg-5">
                                @Html.EditorFor(model => model.Amount, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                            <div class="col-lg-5">
                                @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group row">
                            @Html.LabelFor(model => model.Notes, htmlAttributes: new { @class = "col-form-label col-lg-2" })
                            <div class="col-lg-5">
                                @Html.EditorFor(model => model.Notes, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                            <div class="col-lg-5">
                                @Html.ValidationMessageFor(model => model.Notes, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </fieldset>
                    <div>
                        <a href="@Url.Action("Index", "Expenses")" class="btn btn-warning">Cancel <i class="icon-cross2 ml-2"></i></a>
                        <button type="submit" class="btn btn-primary">Save <i class="icon-checkmark4 ml-2"></i></button>
                    </div>
                </div>
            </div>
            <!-- /form inputs -->
        }
    </div>
    <!-- /content area -->

</div>

<script type="text/javascript">
    $(document).ready(function () {
        $('.select2').select2();

        $('.tanggal').daterangepicker({
            singleDatePicker: true,
            locale: {
                format: 'YYYY/MM/DD'
            }
        });

        $('#Timestamp').data('daterangepicker').setStartDate('@string.Format("{0:yyyy/MM/dd}", Model.Timestamp)');
        $('#Timestamp').data('daterangepicker').setEndDate('@string.Format("{0:yyyy/MM/dd}", Model.Timestamp)');
    })
</script>