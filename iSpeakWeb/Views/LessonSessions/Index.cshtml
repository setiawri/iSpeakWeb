@model IEnumerable<iSpeak.Models.LessonSessionsViewModels>

@{
    ViewBag.Root = "Lesson Sessions";
    ViewBag.Title = "Index";
}

<style>
    .limit-text {
        display: block;
        width: 100px;
        overflow: hidden;
        white-space: nowrap;
        text-overflow: ellipsis;
    }
</style>

<div class="content-wrapper">

    <!-- Content area -->
    <div class="content">

        <!-- Form inputs -->
        <div class="card animated bounceInLeft">
            <div class="card-header header-elements-inline">
                <h5 class="card-title">@ViewBag.Root</h5>
                <div class="header-elements">
                    <div class="list-icons">
                        <a class="list-icons-item" data-action="collapse"></a>
                        <a class="list-icons-item" data-action="reload"></a>
                        <a class="list-icons-item" data-action="remove"></a>
                    </div>
                </div>
            </div>
            <div class="card-body">
                <a href="@Url.Action("Create", "LessonSessions")" class="btn btn-sm btn-success">Create New <i class="icon-plus22 ml-2"></i></a>
                <div class="table-responsive">
                    <table class="table table-hover datatable">
                        <thead>
                            <tr>
                                <th>@Html.DisplayNameFor(model => model.Timestamp)</th>
                                <th>@Html.DisplayNameFor(model => model.Lesson)</th>
                                <th>@Html.DisplayNameFor(model => model.Student)</th>
                                <th>@Html.DisplayNameFor(model => model.Tutor)</th>
                                <th>@Html.DisplayNameFor(model => model.SessionHours)</th>
                                @*@if (ViewBag.IsShowHourlyRate == true)
                                {
                                    <th>@Html.DisplayNameFor(model => model.HourlyRates_Rate)</th>
                                }*@
                                @*<th>@Html.DisplayNameFor(model => model.TravelCost)</th>
                                <th>@Html.DisplayNameFor(model => model.TutorTravelCost)</th>
                                <th>@Html.DisplayNameFor(model => model.Deleted)</th>*@
                                <th>Cancelled</th>
                                <th>Action</th>
                            </tr>
                        </thead>
                        <tbody>
                            @*@foreach (var item in Model)
                            {
                                <tr>
                                    <td>@Html.DisplayFor(modelItem => item.Timestamp)</td>
                                    <td>@Html.DisplayFor(modelItem => item.Lesson)</td>
                                    <td>@Html.DisplayFor(modelItem => item.Student)</td>
                                    <td>@Html.DisplayFor(modelItem => item.Tutor)</td>
                                    <td>@Html.DisplayFor(modelItem => item.SessionHours)</td>
                                    @if (ViewBag.IsShowHourlyRate)
                                    {
                                        <td>@Html.DisplayFor(modelItem => item.HourlyRates_Rate)</td>
                                    }
                                    <td>@Html.DisplayFor(modelItem => item.TravelCost)</td>
                                    <td>@Html.DisplayFor(modelItem => item.TutorTravelCost)</td>
                                    <td>
                                        @if (item.Deleted == false)
                                        {
                                            <span class="badge badge-dark d-block">NO</span>
                                        }
                                        else
                                        {
                                            <span class="badge badge-danger d-block">YES</span>
                                        }
                                    </td>
                                    <td>
                                        @if (item.Deleted == false)
                                        {
                                            <a href="#"><span class="badge badge-warning d-block" data-toggle="modal" data-target="#modal_cancel" onclick="Cancel_Modal('@item.Id', '@item.Timestamp.ToString("yyyy/MM/dd HH:mm")', '@item.Lesson', '@item.Student', '@item.Tutor', '@item.SessionHours')">Cancel</span></a>
                                        }
                                        else
                                        {
                                            <span class="badge badge-flat border-danger d-block text-danger-600">@item.Notes_Cancel</span>
                                        }
                                    </td>
                                    <td>
                                        <a href="javascript:void(0)" onclick="View('@item.Id', '@item.Lesson', '@item.Student', '@item.Tutor')">View</a> |
                                        @Html.ActionLink("Edit", "Edit", new { id = item.Id })
                                        @if (ViewBag.Log == true)
                                        {
                                            @:| @Html.ActionLink("Log", "Index", "Logs", new { id = item.Id, ctrl = this.ViewContext.RouteData.Values["controller"].ToString(), table = this.ViewContext.RouteData.Values["controller"].ToString(), header = item.Student }, null)
                                        }
                                    </td>
                                </tr>
                            }*@
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
        <!-- /form inputs -->
        <!-- Cancel form modal -->
        <div id="modal_cancel" class="modal fade" tabindex="-1">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header bg-warning">
                        <h6 class="modal-title">Cancel Lesson Session</h6>
                        <button type="button" class="close" data-dismiss="modal">&times;</button>
                    </div>

                    <form action="#" class="form-horizontal">
                        <div class="modal-body">
                            <label class="modal-validation text-danger" style="display: none"></label>
                            <div style="display: none">
                                <input class="form-control mdl-id-inv" />
                            </div>
                            <div class="form-group row">
                                <label class="col-form-label col-sm-4">Date</label>
                                <div class="col-sm-8">
                                    <input class="form-control mdl-timestamp" readonly />
                                </div>
                            </div>
                            <div class="form-group row">
                                <label class="col-form-label col-sm-4">Lesson</label>
                                <div class="col-sm-8">
                                    <input class="form-control mdl-lesson" readonly />
                                </div>
                            </div>
                            <div class="form-group row">
                                <label class="col-form-label col-sm-4">Student / Hour</label>
                                <div class="col-sm-6">
                                    <input class="form-control mdl-student" readonly />
                                </div>
                                <div class="col-sm-2">
                                    <input class="form-control mdl-hour" readonly />
                                </div>
                            </div>
                            <div class="form-group row">
                                <label class="col-form-label col-sm-4">Tutor</label>
                                <div class="col-sm-8">
                                    <input class="form-control mdl-tutor" readonly />
                                </div>
                            </div>
                            <div class="form-group row">
                                <label class="col-form-label col-sm-4">Notes</label>
                                <div class="col-sm-8">
                                    <textarea class="form-control mdl-notes" rows="2" placeholder="Reason Cancel"></textarea>
                                </div>
                            </div>
                        </div>

                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                            <button type="button" class="btn bg-success mdl-btn-submit">Submit</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
        <!-- /cancel form modal -->
    </div>
    <!-- /content area -->

</div>

<script type="text/javascript">

    // Setting datatable defaults
    $.extend($.fn.dataTable.defaults, {
        autoWidth: false,
        columnDefs: [{
            orderable: false,
            width: 140,
            targets: [lastColumn]
        }],
        dom: '<"datatable-header"fl><"datatable-scroll"t><"datatable-footer"ip>',
        language: {
            search: '<span>Filter:</span> _INPUT_',
            searchPlaceholder: 'Type to filter...',
            lengthMenu: '<span>Show:</span> _MENU_',
            paginate: { 'first': 'First', 'last': 'Last', 'next': $('html').attr('dir') == 'rtl' ? '&larr;' : '&rarr;', 'previous': $('html').attr('dir') == 'rtl' ? '&rarr;' : '&larr;' }
        }
    });

    var lastColumn = 0;
    if ('@ViewBag.Cancel' == 'True') {
        lastColumn = 6;
    }
    else {
        lastColumn = 5;
    }

    var table = $('.datatable').DataTable({
        processing: true,
        serverSide: true,
        columns: [
            { data: 'Timestamp', name: 'Timestamp' },
            { data: 'Lesson', name: 'Lesson' },
            { data: 'Student', name: 'Student' },
            { data: 'Tutor', name: 'Tutor' },
            {
                data: 'SessionHours', name: 'SessionHours', render: function (e) {
                    return parseFloat(e).toFixed(2).replace(/(\d)(?=(\d{3})+\.)/g, '$1,');
                }
            },
            {
                data: 'Deleted', name: 'Deleted', render: function (data, type, row) {
                    if (data == false) {
                        return '<a href="javascript:void(0)"><span class="badge badge-warning d-block limit-text" data-toggle="modal" data-target="#modal_cancel" onclick="Cancel_Modal(' + "'" + row.Id + "'" + ', ' + "'" + row.Timestamp + "'" + ', ' + "'" + row.Lesson + "'" + ', ' + "'" + row.Student + "'" + ', ' + "'" + row.Tutor + "'" + ', ' + "'" + parseFloat(row.SessionHours).toFixed(2).replace(/(\d)(?=(\d{3})+\.)/g, '$1,') + "'" + ')">Cancel</span></a>';
                    }
                    else {
                        return '<span class="badge badge-flat border-danger d-block text-danger-600 limit-text" title="' + row.Notes_Cancel + '">' + row.Notes_Cancel + '</span>';
                    }
                }
            },
            {
                data: 'Action', name: 'Action', render: function (data, type, row) {
                    var link_log = '@ViewBag.Log' == 'False' ? '' : ' | <a href="' + '@Url.Content("~")' + 'Logs/Index/' + row.Id + '?ctrl=' + '@(this.ViewContext.RouteData.Values["controller"].ToString())' + '&table=' + '@(this.ViewContext.RouteData.Values["controller"].ToString())' + '&header=' + row.Student + '" target="_blank">Log</a>';
                    return '<a href="javascript:void(0)" onclick="View(' + "'" + row.Id + "'" + ', ' + "'" + row.Lesson + "'" + ', ' + "'" + row.Student + "'" + ', ' + "'" + row.Tutor + "'" + ')">View</a> | <a href="' + '@Url.Content("~")' + 'LessonSessions/Edit/' + row.Id + '">Edit</a>' + link_log;
                }
            },
        ],
        ajax: {
            url: '@Url.Action("GetData", "LessonSessions")',
            type: 'POST',
            dataType: 'json',
        },
        pagingType: 'full_numbers',
        order: [[0, 'desc']]
    });

    function View(id, lesson, student, tutor) {
        $.ajax({
            type: "POST",
            url: '@Url.Action("GetSession", "LessonSessions")',
            data: {
                id: id,
                lesson: lesson,
                student: student,
                tutor: tutor
            },
            success: function (data) {
                var dialog = bootbox.alert({
                    title: 'Session Details',
                    size: 'large',
                    message: data.content,
                    backdrop: true
                });
            }, //end success
            error: function (result) {
                bootbox.alert("Error " + result);
            } //end error
        }); //end ajax
    }

    function Cancel_Modal(id, timestamp, lesson, student, tutor, session_hour) {
        $('.mdl-id-inv').val(id);
        $('.mdl-timestamp').val(timestamp);
        $('.mdl-lesson').val(lesson);
        $('.mdl-student').val(student);
        $('.mdl-tutor').val(tutor);
        $('.mdl-hour').val(session_hour);
        $('.mdl-notes').val('');
    }

    function Cancelled(id, notes) {
        $.ajax({
            type: "POST",
            url: '@Url.Action("Cancelled", "LessonSessions")',
            data: {
                id: id,
                notes: notes
            },
            success: function (data) {
                //location.reload();
                $('#modal_cancel').modal('toggle');
                table.ajax.reload(null, false);
            }, //end success
            error: function (result) {
                bootbox.alert("Error " + result);
            } //end error
        }); //end ajax
    }

    $(document).ready(function () {

        if ('@ViewBag.Cancel' == 'False') {
            table.column(5).visible(false);
        }

        $('.mdl-btn-submit').click(function () {
            if ($('.mdl-notes').val() == '') {
                $('.modal-validation').html('The field Notes is required.').show();
            }
            else {
                $('.modal-validation').html('').hide();
                Cancelled($('.mdl-id-inv').val(), $('.mdl-notes').val());
            }
        });

        console.log('DateTimeNow: ' + '@ViewBag.TanggalNow' + ', DateTimeUtcNow: ' + '@ViewBag.TanggalUtc');
    });
</script>